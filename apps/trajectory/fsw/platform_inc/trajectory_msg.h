/**
 * @file trajectory_msg.h
 * @brief definition of messages generated by the trajectory messages
 */
#ifndef ICAROUS_CFS_TRAJECTORY_MSG_H
#define ICAROUS_CFS_TRAJECTORY_MSG_H

#include "cfe.h"
#include "DubinsParams.h"

 /**
 * @enum algorithm_e
 * @brief search algorithm type
 */
typedef enum {
    _GRID,              ///< A simple grid based Astar algorithm (Requires a keep in geofence to bound the search space)
    _ASTAR,             ///< A pseudo-motion primitive type Astar algorithm
    _RRT,               ///< Rapidly exploring random tree based algorithm (Requires a keep in geofence to bound the search space)
    _SPLINES            ///< Bsplines based planner (experimental planner)
}algorithm_e;

/**
 * @struct trajectory_request_t
 * @brief Request computation of a trajectory
 */
typedef struct{
   CCSDS_PriHdr_t hdr;
   char planID[25];                        /**< Plan name */
   double initialPosition[3];              /**< initial position, lat (degree), lon (degree), alt (m) */
   double initialVelocity[3];              /**< initial velocity track (degree), ground speed (m/s), vertical speed (m/s) */
   double finalPosition[3];                /**< final position  (lat, lon, alt )*/
   double finalVelocity[3];                /**< final velocity */
}trajectory_request_t;


/**
 * @struct trajectory_parameters_t
 * @brief trajectory parameters
 */
 typedef struct{
    CCSDS_PriHdr_t hdr;
    DubinsParams_t dbparams; 
    int return2nextWP;
    double crossTrackDeviation;
 }trajectory_parameters_t;

/**@}*/
#endif //ICAROUS_CFS_TRAJECTORY_MSG_H
